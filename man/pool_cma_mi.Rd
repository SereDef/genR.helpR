% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genr_model.R
\name{pool_cma_mi}
\alias{pool_cma_mi}
\title{Pool CMAverse results across multiple imputations}
\usage{
pool_cma_mi(fit, model_name = "Model", verbose = TRUE)
}
\arguments{
\item{fit}{A \code{mira.CMA} object returned by \code{\link[=run_cma_mi]{run_cma_mi()}}.}

\item{model_name}{Character label to tag each pooled model in the output.}

\item{verbose}{Logical; if \code{TRUE}, prints progress and the combined table.}
}
\value{
A list containing:
\describe{
\item{yreg}{Pooled outcome regression summary.}
\item{mreg}{Pooled mediator regression summary.}
\item{cregr}{List of pooled post-treatment confounder regressions.}
\item{decomp}{Pooled decomposition summary.}
}

If \code{verbose = TRUE}, a combined summary table is also printed.
}
\description{
Combines model estimates from a \code{mira.CMA} object (produced by \code{\link[=run_cma_mi]{run_cma_mi()}})
across multiple imputations, using Rubin’s rules for both regression and
decomposition outputs.
}
\details{
The function pools:
\itemize{
\item Outcome regression (\code{yreg})
\item Mediator regression (\code{mreg})
\item Post-treatment confounder regression(s) (\code{cregr})
\item Decomposition summary (\code{decomp})
}

Regression pooling uses \code{mice::pool()}, and decomposition pooling
follows Rubin’s rules with small-sample corrections for degrees of freedom.
}
\examples{
\dontshow{if (exists("imp_list")) withAutoprint(\{ # examplesIf}
fit_all <- run_cma_mi(imp_list, "X", "Y", "M")
pooled <- pool_cma_mi(fit_all, model_name = "CMA Example")
pooled$decomp
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=run_cma_mi]{run_cma_mi()}} for model fitting.
}
